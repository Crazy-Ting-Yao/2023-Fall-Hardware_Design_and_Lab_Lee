$date
	Sat Nov  4 21:40:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Scan_Chain_Design_t $end
$var wire 1 ! scan_out $end
$var reg 1 " clk $end
$var reg 1 # rst_n $end
$var reg 1 $ scan_en $end
$var reg 1 % scan_in $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 % scan_in $end
$var wire 1 ! scan_out $end
$var wire 8 & p [7:0] $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( a [3:0] $end
$scope module dff1 $end
$var wire 1 " clk $end
$var wire 1 ) data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 * scan_in $end
$var reg 1 + out $end
$upscope $end
$scope module dff2 $end
$var wire 1 " clk $end
$var wire 1 , data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 - scan_in $end
$var reg 1 . out $end
$upscope $end
$scope module dff3 $end
$var wire 1 " clk $end
$var wire 1 / data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 0 scan_in $end
$var reg 1 1 out $end
$upscope $end
$scope module dff4 $end
$var wire 1 " clk $end
$var wire 1 2 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 3 scan_in $end
$var reg 1 4 out $end
$upscope $end
$scope module dff5 $end
$var wire 1 " clk $end
$var wire 1 5 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 6 scan_in $end
$var reg 1 7 out $end
$upscope $end
$scope module dff6 $end
$var wire 1 " clk $end
$var wire 1 8 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 9 scan_in $end
$var reg 1 : out $end
$upscope $end
$scope module dff7 $end
$var wire 1 " clk $end
$var wire 1 ; data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 < scan_in $end
$var reg 1 = out $end
$upscope $end
$scope module dff8 $end
$var wire 1 " clk $end
$var wire 1 > data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 % scan_in $end
$var reg 1 ? out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
bx '
bx &
0%
0$
0#
0"
x!
$end
#5000
0!
0)
0,
0/
02
05
08
0;
0>
0*
0-
00
03
06
09
0<
b0 &
0+
0.
01
b0 '
04
07
0:
0=
b0 (
0?
1"
#10000
0"
1#
#15000
1"
#20000
0"
1%
1$
#25000
1<
b1000 (
1?
1"
#30000
0"
0%
#35000
0<
19
0?
b100 (
1=
1"
#40000
0"
1%
#45000
16
09
1<
1:
0=
b1010 (
1?
1"
#50000
0"
0%
#55000
0<
19
06
13
0?
1=
0:
b101 (
17
1"
#60000
0"
1%
#65000
10
15
1;
03
16
09
1<
b1010000 &
b1000 '
14
07
1:
0=
b1010 (
1?
1"
#70000
0"
0%
#75000
0<
19
06
13
1/
00
0;
1-
0?
1=
0:
b101 (
17
04
b10100 &
b100 '
11
1"
#80000
0"
1%
#85000
1*
0-
10
1;
03
16
09
05
1<
18
1.
01
b1010 '
14
07
1:
0=
b1100100 &
b1010 (
1?
1"
#90000
0"
0%
#95000
0<
19
06
13
1)
00
1-
0;
0*
0/
15
08
1!
12
0?
1=
0:
b101 (
17
04
11
0.
b11001 &
b101 '
1+
1"
#100000
0"
0$
#105000
0-
10
09
05
01
b1001 '
14
b1001 &
b1 (
0=
1"
#110000
0"
1$
#115000
03
02
1-
0!
0)
b0 (
07
11
b0 &
b1100 '
0+
1"
#120000
0"
#125000
1*
00
1.
b110 '
04
1"
#130000
0"
#135000
0-
1!
01
b11 '
1+
1"
#140000
0"
#145000
0*
b1 '
0.
1"
#150000
0"
#155000
0!
b0 '
0+
1"
#160000
0"
#165000
1"
#170000
0"
#175000
1"
#180000
0"
#185000
1"
#190000
0"
0$
#195000
1"
#200000
0"
