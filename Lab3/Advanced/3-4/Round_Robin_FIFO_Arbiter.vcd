$date
	Mon Oct 23 23:51:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Round_Robin_FIFO_Arbiter_t $end
$var wire 1 ! valid $end
$var wire 8 " dout [7:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 8 % c [7:0] $end
$var reg 1 & clk $end
$var reg 8 ' d [7:0] $end
$var reg 1 ( rst_n $end
$var reg 4 ) wen [3:0] $end
$scope module uut $end
$var wire 8 * a [7:0] $end
$var wire 8 + b [7:0] $end
$var wire 8 , c [7:0] $end
$var wire 1 & clk $end
$var wire 8 - d [7:0] $end
$var wire 1 ( rst_n $end
$var wire 4 . wen [3:0] $end
$var wire 4 / error [3:0] $end
$var wire 8 0 dout [7:0] $end
$var reg 2 1 counter [1:0] $end
$var reg 3 2 fifo_out [2:0] $end
$var reg 1 ! valid $end
$scope module a_fifo $end
$var wire 1 & clk $end
$var wire 8 3 din [7:0] $end
$var wire 1 4 ren $end
$var wire 1 ( rst_n $end
$var wire 1 5 wen $end
$var reg 8 6 dontcare [7:0] $end
$var reg 8 7 dout [7:0] $end
$var reg 1 8 error $end
$var reg 1 9 full $end
$var reg 3 : read_pointer [2:0] $end
$var reg 3 ; write_pointer [2:0] $end
$upscope $end
$scope module b_fifo $end
$var wire 1 & clk $end
$var wire 8 < din [7:0] $end
$var wire 1 = ren $end
$var wire 1 ( rst_n $end
$var wire 1 > wen $end
$var reg 8 ? dontcare [7:0] $end
$var reg 8 @ dout [7:0] $end
$var reg 1 A error $end
$var reg 1 B full $end
$var reg 3 C read_pointer [2:0] $end
$var reg 3 D write_pointer [2:0] $end
$upscope $end
$scope module c_fifo $end
$var wire 1 & clk $end
$var wire 8 E din [7:0] $end
$var wire 1 F ren $end
$var wire 1 ( rst_n $end
$var wire 1 G wen $end
$var reg 8 H dontcare [7:0] $end
$var reg 8 I dout [7:0] $end
$var reg 1 J error $end
$var reg 1 K full $end
$var reg 3 L read_pointer [2:0] $end
$var reg 3 M write_pointer [2:0] $end
$upscope $end
$scope module d_fifo $end
$var wire 1 & clk $end
$var wire 8 N din [7:0] $end
$var wire 1 O ren $end
$var wire 1 ( rst_n $end
$var wire 1 P wen $end
$var reg 8 Q dontcare [7:0] $end
$var reg 8 R dout [7:0] $end
$var reg 1 S error $end
$var reg 1 T full $end
$var reg 3 U read_pointer [2:0] $end
$var reg 3 V write_pointer [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx V
bx U
xT
xS
bx R
bx Q
1P
0O
bx N
bx M
bx L
xK
xJ
bx I
bx H
1G
0F
bx E
bx D
bx C
xB
xA
bx @
bx ?
1>
0=
bx <
bx ;
bx :
x9
x8
bx 7
bx 6
15
04
bx 3
bx 2
bx 1
bx 0
bx /
b1111 .
bx -
bx ,
bx +
bx *
b1111 )
0(
bx '
0&
bx %
bx $
bx #
bx "
x!
$end
#5000
b0 "
b0 0
0!
09
b0 7
08
b0 :
b0 ;
0B
b0 @
0A
b0 C
b0 D
0K
b0 I
0J
b0 L
b0 M
0T
b0 R
b0 /
0S
b0 U
b0 V
b100 2
b0 1
1&
#10000
b1101 '
b1101 -
b1101 N
b1001 %
b1001 ,
b1001 E
b111000 $
b111000 +
b111000 <
b1010111 #
b1010111 *
b1010111 3
1(
0&
#15000
b0 2
b1 1
bx R
b1 V
bx I
b1 M
bx @
b1 D
bx 7
b1 ;
1&
#20000
1=
05
0>
0G
b1010101 '
b1010101 -
b1010101 N
bx %
bx ,
bx E
bx $
bx +
bx <
bx #
bx *
bx 3
b1000 )
b1000 .
0&
#25000
b111000 "
b111000 0
1!
0=
1F
b1 C
b111000 @
b10 V
b1 2
b10 1
1&
#30000
0F
1G
0P
bx '
bx -
bx N
b10001011 %
b10001011 ,
b10001011 E
b100 )
b100 .
0&
#35000
0!
1O
b0 "
b0 0
b10 2
b11 1
b10 M
bx @
1&
#40000
0G
bx %
bx ,
bx E
b0 )
b0 .
0&
#45000
b1101 "
b1101 0
1!
14
0O
b1 U
b1101 R
b11 2
b0 1
1&
#50000
0&
#55000
04
1=
b1010111 "
b1010111 0
b0 2
b1 1
bx R
b1 :
b1010111 7
1&
#60000
0&
#65000
b0 "
b0 0
0!
0=
1F
bx 7
b10 /
1A
b1 2
b10 1
1&
#70000
15
b110011 #
b110011 *
b110011 3
b1 )
b1 .
0&
#75000
b1001 "
b1001 0
0F
1O
1!
b10 2
b11 1
b1 L
b1001 I
b0 /
0A
b10 ;
1&
#80000
05
bx #
bx *
bx 3
b0 )
b0 .
0&
#85000
b1010101 "
b1010101 0
14
0O
bx I
b10 U
b1010101 R
b11 2
b0 1
1&
#90000
0&
#95000
04
1=
b110011 "
b110011 0
b0 2
b1 1
bx R
b10 :
b110011 7
1&
#100000
0&
#105000
b0 "
b0 0
0!
0=
1F
bx 7
b10 /
1A
b1 2
b10 1
1&
#110000
0&
#115000
b10001011 "
b10001011 0
0F
1O
1!
b10 2
b11 1
b10 L
b10001011 I
b0 /
0A
1&
#120000
0O
15
1>
1G
1P
b100 '
b100 -
b100 N
b11 %
b11 ,
b11 E
b10 $
b10 +
b10 <
b1 #
b1 *
b1 3
b1111 )
b1111 .
0&
0(
#125000
b0 "
b0 0
0!
b0 7
b0 :
b0 ;
b0 @
b0 C
b0 D
b0 I
b0 L
b0 M
b0 R
b0 U
b0 V
b100 2
b0 1
1&
#130000
14
05
0>
0G
0P
bx '
bx -
bx N
bx %
bx ,
bx E
bx $
bx +
bx <
bx #
bx *
bx 3
b0 )
b0 .
1(
0&
#135000
04
1=
b0 2
b1 1
bx R
bx I
bx @
bx 7
b1 /
18
1&
#140000
0&
#145000
0=
1F
08
b10 /
1A
b1 2
b10 1
1&
#150000
0&
#155000
0F
1O
b10 2
b11 1
1J
b100 /
0A
1&
#160000
0&
#165000
14
0O
0J
b1000 /
1S
b11 2
b0 1
1&
#170000
0&
#175000
04
1=
b0 2
b1 1
0S
b1 /
18
1&
#180000
0&
