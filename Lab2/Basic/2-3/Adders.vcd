$date
	Thu Oct 05 17:28:06 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Adders_t $end
$var wire 1 ! ha_sum $end
$var wire 1 " ha_cout $end
$var wire 1 # fa_sum $end
$var wire 1 $ fa_cout $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' cin $end
$scope module fa $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 ' cin $end
$var wire 1 ( temp1 $end
$var wire 1 # sum $end
$var wire 1 $ cout $end
$scope module M1 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 ' c $end
$var wire 1 ) temp4 $end
$var wire 1 * temp3 $end
$var wire 1 + temp2 $end
$var wire 1 , temp1 $end
$var wire 1 $ out $end
$scope module A1 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 , out $end
$var wire 1 - temp $end
$upscope $end
$scope module A2 $end
$var wire 1 % a $end
$var wire 1 ' b $end
$var wire 1 + out $end
$var wire 1 . temp $end
$upscope $end
$scope module A3 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 * out $end
$var wire 1 / temp $end
$upscope $end
$scope module O1 $end
$var wire 1 , a $end
$var wire 1 + b $end
$var wire 1 ) out $end
$var wire 1 0 temp1 $end
$var wire 1 1 temp2 $end
$upscope $end
$scope module O2 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 $ out $end
$var wire 1 2 temp1 $end
$var wire 1 3 temp2 $end
$upscope $end
$upscope $end
$scope module X1 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 4 na $end
$var wire 1 5 nb $end
$var wire 1 ( out $end
$var wire 1 6 temp1 $end
$var wire 1 7 temp2 $end
$upscope $end
$scope module X2 $end
$var wire 1 ( a $end
$var wire 1 ' b $end
$var wire 1 8 na $end
$var wire 1 9 nb $end
$var wire 1 # out $end
$var wire 1 : temp1 $end
$var wire 1 ; temp2 $end
$upscope $end
$upscope $end
$scope module ha $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$scope module A1 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 " out $end
$var wire 1 < temp $end
$upscope $end
$scope module X1 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 = na $end
$var wire 1 > nb $end
$var wire 1 ! out $end
$var wire 1 ? temp1 $end
$var wire 1 @ temp2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#1000
1#
09
0:
1'
#2000
08
0;
1(
1!
1#
05
06
0>
0?
19
1:
1&
0'
#3000
1$
03
0#
1*
1;
0/
09
1'
#4000
0$
13
1#
0*
0;
04
07
0=
0@
15
16
1>
1?
1/
19
1%
0&
0'
#5000
1$
02
1)
01
0#
1+
1;
0.
09
1'
#6000
18
00
0(
0!
11
0#
1,
17
1"
1@
0+
1;
0-
05
0<
0>
1.
19
1&
0'
#7000
01
03
1+
1*
1#
0.
0/
09
0:
1'
#8000
0$
12
0)
10
11
13
0,
0"
0+
0*
0#
14
1=
1-
15
1<
1>
1.
1/
19
1:
0%
0&
0'
#9000
